{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/BirLab-AI-assistant/frontend/src/SplitView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst SplitView = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [availableModels, setAvailableModels] = useState([]);\n  const [selectedModels, setSelectedModels] = useState([]);\n  const [results, setResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [comparisonStats, setComparisonStats] = useState(null);\n  const [maxModels, setMaxModels] = useState(4);\n\n  // Load available models on component mount\n  useEffect(() => {\n    loadAvailableModels();\n  }, []);\n  const loadAvailableModels = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/models/available`);\n      setAvailableModels(response.data.all_models);\n\n      // Auto-select first 2 models from different providers if possible\n      const models = response.data.all_models;\n      if (models.length >= 2) {\n        const providers = new Set();\n        const autoSelected = [];\n        for (const model of models) {\n          if (autoSelected.length < 2 && !providers.has(model.provider)) {\n            autoSelected.push(model.id);\n            providers.add(model.provider);\n          }\n        }\n        setSelectedModels(autoSelected);\n      }\n    } catch (error) {\n      console.error('Error loading models:', error);\n    }\n  };\n  const handleModelToggle = modelId => {\n    setSelectedModels(prev => {\n      if (prev.includes(modelId)) {\n        return prev.filter(id => id !== modelId);\n      } else if (prev.length < maxModels) {\n        return [...prev, modelId];\n      } else {\n        // Replace first model if at max capacity\n        return [modelId, ...prev.slice(1)];\n      }\n    });\n  };\n  const runComparison = async () => {\n    if (!message.trim() || selectedModels.length < 1) {\n      alert('Please enter a message and select at least 1 model');\n      return;\n    }\n    setIsLoading(true);\n    setResults([]);\n    setComparisonStats(null);\n    try {\n      const response = await axios.post(`${API_BASE_URL}/split-view`, {\n        message: message.trim(),\n        model_ids: selectedModels,\n        max_models: maxModels\n      });\n      setResults(response.data.results);\n      setComparisonStats(response.data.comparison_stats);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Split view error:', error);\n      alert('Error running comparison: ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || error.message));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Remove emojis from model display names\n  const getModelDisplayName = agentId => {\n    const model = availableModels.find(m => m.id === agentId);\n    if (!model) return agentId;\n    // Remove emojis from the name (if any)\n    return model.name.replace(/^[^a-zA-Z0-9]+/, '').trim();\n  };\n  const getModelProvider = agentId => {\n    const model = availableModels.find(m => m.id === agentId);\n    return model ? model.provider : 'unknown';\n  };\n  const formatResponseTime = time => {\n    return `${time}s`;\n  };\n\n  // Helper to highlight bests\n  const getHighlightClass = result => {\n    if (!comparisonStats) return '';\n    if (comparisonStats.fastest_model === result.agent_id) return 'highlight-fastest';\n    if (comparisonStats.longest_response === result.agent_id) return 'highlight-longest';\n    if (comparisonStats.highest_quality === result.agent_id) return 'highlight-quality';\n    return '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"split-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split-view-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDD00 Split View Comparison\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Compare responses from multiple AI models side-by-side\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Enter your prompt to compare across multiple models...\",\n          className: \"message-input\",\n          rows: 3,\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selection-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Select Models (\", selectedModels.length, \"/\", maxModels, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-models-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Max Models:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: maxModels,\n              onChange: e => setMaxModels(Number(e.target.value)),\n              disabled: isLoading,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: 2,\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 3,\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 4,\n                children: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 6,\n                children: \"6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"models-grid\",\n          children: availableModels.map(model => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `model-card ${selectedModels.includes(model.id) ? 'selected' : ''}`,\n            onClick: () => handleModelToggle(model.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"model-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"provider-badge\",\n                children: model.provider\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"model-name\",\n                children: model.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"model-details\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: [\"Context: \", model.context_length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)]\n          }, model.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: runComparison,\n        disabled: isLoading || !message.trim() || selectedModels.length === 0,\n        className: \"compare-button\",\n        children: isLoading ? '🔄 Comparing...' : '🚀 Compare Models'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), comparisonStats && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comparison-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCCA Comparison Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Total Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: [comparisonStats.total_comparison_time, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Successful:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: [comparisonStats.successful_responses, \"/\", comparisonStats.total_models]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Average Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: [comparisonStats.average_response_time, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), comparisonStats.fastest_model && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item highlight-fastest\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Fastest:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: getModelDisplayName(comparisonStats.fastest_model)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, this), comparisonStats.longest_response && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item highlight-longest\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Longest:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: getModelDisplayName(comparisonStats.longest_response)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }, this), comparisonStats.highest_quality && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item highlight-quality\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Best Quality:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: getModelDisplayName(comparisonStats.highest_quality)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDD25 Model Responses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-grid\",\n        children: results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `result-card ${getHighlightClass(result)}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"model-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"provider-tag\",\n                children: getModelProvider(result.agent_id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"model-name\",\n                children: getModelDisplayName(result.agent_id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-stats\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"response-time\",\n                children: [\"\\u23F1\\uFE0F \", formatResponseTime(result.response_time)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"response-length\",\n                children: [\"\\uD83D\\uDCDD \", result.response_length_words, \" words / \", result.response_length_chars, \" chars\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"quality-score\",\n                children: [\"\\u2B50 \", Math.round(result.quality_score * 100), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-content\",\n            children: result.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: [\"\\u274C Error: \", result.error]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"response-text\",\n              children: result.response\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-footer\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Generated at \", new Date(result.timestamp).toLocaleTimeString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this)]\n        }, result.agent_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Querying \", selectedModels.length, \" models...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(SplitView, \"i1orYH+7z5mWngi8ED+pz3KzxEY=\");\n_c = SplitView;\nexport default SplitView;\nvar _c;\n$RefreshReg$(_c, \"SplitView\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_URL","SplitView","_s","message","setMessage","availableModels","setAvailableModels","selectedModels","setSelectedModels","results","setResults","isLoading","setIsLoading","comparisonStats","setComparisonStats","maxModels","setMaxModels","loadAvailableModels","response","get","data","all_models","models","length","providers","Set","autoSelected","model","has","provider","push","id","add","error","console","handleModelToggle","modelId","prev","includes","filter","slice","runComparison","trim","alert","post","model_ids","max_models","comparison_stats","_error$response","_error$response$data","detail","getModelDisplayName","agentId","find","m","name","replace","getModelProvider","formatResponseTime","time","getHighlightClass","result","fastest_model","agent_id","longest_response","highest_quality","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","rows","disabled","Number","map","onClick","context_length","total_comparison_time","successful_responses","total_models","average_response_time","index","response_time","response_length_words","response_length_chars","Math","round","quality_score","Date","timestamp","toLocaleTimeString","_c","$RefreshReg$"],"sources":["/Users/mac/Documents/BirLab-AI-assistant/frontend/src/SplitView.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nconst SplitView = () => {\n  const [message, setMessage] = useState('');\n  const [availableModels, setAvailableModels] = useState([]);\n  const [selectedModels, setSelectedModels] = useState([]);\n  const [results, setResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [comparisonStats, setComparisonStats] = useState(null);\n  const [maxModels, setMaxModels] = useState(4);\n\n  // Load available models on component mount\n  useEffect(() => {\n    loadAvailableModels();\n  }, []);\n\n  const loadAvailableModels = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/models/available`);\n      setAvailableModels(response.data.all_models);\n      \n      // Auto-select first 2 models from different providers if possible\n      const models = response.data.all_models;\n      if (models.length >= 2) {\n        const providers = new Set();\n        const autoSelected = [];\n        \n        for (const model of models) {\n          if (autoSelected.length < 2 && !providers.has(model.provider)) {\n            autoSelected.push(model.id);\n            providers.add(model.provider);\n          }\n        }\n        \n        setSelectedModels(autoSelected);\n      }\n    } catch (error) {\n      console.error('Error loading models:', error);\n    }\n  };\n\n  const handleModelToggle = (modelId) => {\n    setSelectedModels(prev => {\n      if (prev.includes(modelId)) {\n        return prev.filter(id => id !== modelId);\n      } else if (prev.length < maxModels) {\n        return [...prev, modelId];\n      } else {\n        // Replace first model if at max capacity\n        return [modelId, ...prev.slice(1)];\n      }\n    });\n  };\n\n  const runComparison = async () => {\n    if (!message.trim() || selectedModels.length < 1) {\n      alert('Please enter a message and select at least 1 model');\n      return;\n    }\n\n    setIsLoading(true);\n    setResults([]);\n    setComparisonStats(null);\n\n    try {\n      const response = await axios.post(`${API_BASE_URL}/split-view`, {\n        message: message.trim(),\n        model_ids: selectedModels,\n        max_models: maxModels\n      });\n\n      setResults(response.data.results);\n      setComparisonStats(response.data.comparison_stats);\n    } catch (error) {\n      console.error('Split view error:', error);\n      alert('Error running comparison: ' + (error.response?.data?.detail || error.message));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Remove emojis from model display names\n  const getModelDisplayName = (agentId) => {\n    const model = availableModels.find(m => m.id === agentId);\n    if (!model) return agentId;\n    // Remove emojis from the name (if any)\n    return model.name.replace(/^[^a-zA-Z0-9]+/, '').trim();\n  };\n\n  const getModelProvider = (agentId) => {\n    const model = availableModels.find(m => m.id === agentId);\n    return model ? model.provider : 'unknown';\n  };\n\n  const formatResponseTime = (time) => {\n    return `${time}s`;\n  };\n\n  // Helper to highlight bests\n  const getHighlightClass = (result) => {\n    if (!comparisonStats) return '';\n    if (comparisonStats.fastest_model === result.agent_id) return 'highlight-fastest';\n    if (comparisonStats.longest_response === result.agent_id) return 'highlight-longest';\n    if (comparisonStats.highest_quality === result.agent_id) return 'highlight-quality';\n    return '';\n  };\n\n  return (\n    <div className=\"split-view\">\n      <div className=\"split-view-header\">\n        <h2>🔀 Split View Comparison</h2>\n        <p>Compare responses from multiple AI models side-by-side</p>\n      </div>\n\n      {/* Input Section */}\n      <div className=\"input-section\">\n        <div className=\"message-input-container\">\n          <textarea\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            placeholder=\"Enter your prompt to compare across multiple models...\"\n            className=\"message-input\"\n            rows={3}\n            disabled={isLoading}\n          />\n        </div>\n\n        {/* Model Selection */}\n        <div className=\"model-selection\">\n          <div className=\"selection-header\">\n            <h3>Select Models ({selectedModels.length}/{maxModels})</h3>\n            <div className=\"max-models-control\">\n              <label>Max Models:</label>\n              <select \n                value={maxModels} \n                onChange={(e) => setMaxModels(Number(e.target.value))}\n                disabled={isLoading}\n              >\n                <option value={2}>2</option>\n                <option value={3}>3</option>\n                <option value={4}>4</option>\n                <option value={6}>6</option>\n              </select>\n            </div>\n          </div>\n\n          <div className=\"models-grid\">\n            {availableModels.map(model => (\n              <div \n                key={model.id}\n                className={`model-card ${selectedModels.includes(model.id) ? 'selected' : ''}`}\n                onClick={() => handleModelToggle(model.id)}\n              >\n                <div className=\"model-info\">\n                  <span className=\"provider-badge\">{model.provider}</span>\n                  <span className=\"model-name\">{model.name}</span>\n                </div>\n                <div className=\"model-details\">\n                  <small>Context: {model.context_length}</small>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <button \n          onClick={runComparison}\n          disabled={isLoading || !message.trim() || selectedModels.length === 0}\n          className=\"compare-button\"\n        >\n          {isLoading ? '🔄 Comparing...' : '🚀 Compare Models'}\n        </button>\n      </div>\n\n      {/* Comparison Stats */}\n      {comparisonStats && (\n        <div className=\"comparison-stats\">\n          <h3>📊 Comparison Results</h3>\n          <div className=\"stats-grid\">\n            <div className=\"stat-item\">\n              <span className=\"stat-label\">Total Time:</span>\n              <span className=\"stat-value\">{comparisonStats.total_comparison_time}s</span>\n            </div>\n            <div className=\"stat-item\">\n              <span className=\"stat-label\">Successful:</span>\n              <span className=\"stat-value\">{comparisonStats.successful_responses}/{comparisonStats.total_models}</span>\n            </div>\n            <div className=\"stat-item\">\n              <span className=\"stat-label\">Average Time:</span>\n              <span className=\"stat-value\">{comparisonStats.average_response_time}s</span>\n            </div>\n            {comparisonStats.fastest_model && (\n              <div className=\"stat-item highlight-fastest\">\n                <span className=\"stat-label\">Fastest:</span>\n                <span className=\"stat-value\">{getModelDisplayName(comparisonStats.fastest_model)}</span>\n              </div>\n            )}\n            {comparisonStats.longest_response && (\n              <div className=\"stat-item highlight-longest\">\n                <span className=\"stat-label\">Longest:</span>\n                <span className=\"stat-value\">{getModelDisplayName(comparisonStats.longest_response)}</span>\n              </div>\n            )}\n            {comparisonStats.highest_quality && (\n              <div className=\"stat-item highlight-quality\">\n                <span className=\"stat-label\">Best Quality:</span>\n                <span className=\"stat-value\">{getModelDisplayName(comparisonStats.highest_quality)}</span>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Results Grid */}\n      {results.length > 0 && (\n        <div className=\"results-section\">\n          <h3>🔥 Model Responses</h3>\n          <div className=\"results-grid\">\n            {results.map((result, index) => (\n              <div key={result.agent_id} className={`result-card ${getHighlightClass(result)}`}>\n                <div className=\"result-header\">\n                  <div className=\"model-info\">\n                    <span className=\"provider-tag\">{getModelProvider(result.agent_id)}</span>\n                    <span className=\"model-name\">{getModelDisplayName(result.agent_id)}</span>\n                  </div>\n                  <div className=\"result-stats\">\n                    <span className=\"response-time\">⏱️ {formatResponseTime(result.response_time)}</span>\n                    <span className=\"response-length\">📝 {result.response_length_words} words / {result.response_length_chars} chars</span>\n                    <span className=\"quality-score\">⭐ {Math.round(result.quality_score * 100)}%</span>\n                  </div>\n                </div>\n                <div className=\"result-content\">\n                  {result.error ? (\n                    <div className=\"error-message\">\n                      ❌ Error: {result.error}\n                    </div>\n                  ) : (\n                    <div className=\"response-text\">\n                      {result.response}\n                    </div>\n                  )}\n                </div>\n                <div className=\"result-footer\">\n                  <small>Generated at {new Date(result.timestamp).toLocaleTimeString()}</small>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Loading State */}\n      {isLoading && (\n        <div className=\"loading-overlay\">\n          <div className=\"loading-spinner\">\n            <div className=\"spinner\"></div>\n            <p>Querying {selectedModels.length} models...</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SplitView; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAE7E,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACqB,eAAe,EAAEC,kBAAkB,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;;EAE7C;EACAC,SAAS,CAAC,MAAM;IACdwB,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAAC,GAAGtB,YAAY,mBAAmB,CAAC;MACpES,kBAAkB,CAACY,QAAQ,CAACE,IAAI,CAACC,UAAU,CAAC;;MAE5C;MACA,MAAMC,MAAM,GAAGJ,QAAQ,CAACE,IAAI,CAACC,UAAU;MACvC,IAAIC,MAAM,CAACC,MAAM,IAAI,CAAC,EAAE;QACtB,MAAMC,SAAS,GAAG,IAAIC,GAAG,CAAC,CAAC;QAC3B,MAAMC,YAAY,GAAG,EAAE;QAEvB,KAAK,MAAMC,KAAK,IAAIL,MAAM,EAAE;UAC1B,IAAII,YAAY,CAACH,MAAM,GAAG,CAAC,IAAI,CAACC,SAAS,CAACI,GAAG,CAACD,KAAK,CAACE,QAAQ,CAAC,EAAE;YAC7DH,YAAY,CAACI,IAAI,CAACH,KAAK,CAACI,EAAE,CAAC;YAC3BP,SAAS,CAACQ,GAAG,CAACL,KAAK,CAACE,QAAQ,CAAC;UAC/B;QACF;QAEArB,iBAAiB,CAACkB,YAAY,CAAC;MACjC;IACF,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAME,iBAAiB,GAAIC,OAAO,IAAK;IACrC5B,iBAAiB,CAAC6B,IAAI,IAAI;MACxB,IAAIA,IAAI,CAACC,QAAQ,CAACF,OAAO,CAAC,EAAE;QAC1B,OAAOC,IAAI,CAACE,MAAM,CAACR,EAAE,IAAIA,EAAE,KAAKK,OAAO,CAAC;MAC1C,CAAC,MAAM,IAAIC,IAAI,CAACd,MAAM,GAAGR,SAAS,EAAE;QAClC,OAAO,CAAC,GAAGsB,IAAI,EAAED,OAAO,CAAC;MAC3B,CAAC,MAAM;QACL;QACA,OAAO,CAACA,OAAO,EAAE,GAAGC,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;MACpC;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACtC,OAAO,CAACuC,IAAI,CAAC,CAAC,IAAInC,cAAc,CAACgB,MAAM,GAAG,CAAC,EAAE;MAChDoB,KAAK,CAAC,oDAAoD,CAAC;MAC3D;IACF;IAEA/B,YAAY,CAAC,IAAI,CAAC;IAClBF,UAAU,CAAC,EAAE,CAAC;IACdI,kBAAkB,CAAC,IAAI,CAAC;IAExB,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMxB,KAAK,CAACkD,IAAI,CAAC,GAAG/C,YAAY,aAAa,EAAE;QAC9DM,OAAO,EAAEA,OAAO,CAACuC,IAAI,CAAC,CAAC;QACvBG,SAAS,EAAEtC,cAAc;QACzBuC,UAAU,EAAE/B;MACd,CAAC,CAAC;MAEFL,UAAU,CAACQ,QAAQ,CAACE,IAAI,CAACX,OAAO,CAAC;MACjCK,kBAAkB,CAACI,QAAQ,CAACE,IAAI,CAAC2B,gBAAgB,CAAC;IACpD,CAAC,CAAC,OAAOd,KAAK,EAAE;MAAA,IAAAe,eAAA,EAAAC,oBAAA;MACdf,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzCU,KAAK,CAAC,4BAA4B,IAAI,EAAAK,eAAA,GAAAf,KAAK,CAACf,QAAQ,cAAA8B,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgB5B,IAAI,cAAA6B,oBAAA,uBAApBA,oBAAA,CAAsBC,MAAM,KAAIjB,KAAK,CAAC9B,OAAO,CAAC,CAAC;IACvF,CAAC,SAAS;MACRS,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMuC,mBAAmB,GAAIC,OAAO,IAAK;IACvC,MAAMzB,KAAK,GAAGtB,eAAe,CAACgD,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACvB,EAAE,KAAKqB,OAAO,CAAC;IACzD,IAAI,CAACzB,KAAK,EAAE,OAAOyB,OAAO;IAC1B;IACA,OAAOzB,KAAK,CAAC4B,IAAI,CAACC,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAACd,IAAI,CAAC,CAAC;EACxD,CAAC;EAED,MAAMe,gBAAgB,GAAIL,OAAO,IAAK;IACpC,MAAMzB,KAAK,GAAGtB,eAAe,CAACgD,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACvB,EAAE,KAAKqB,OAAO,CAAC;IACzD,OAAOzB,KAAK,GAAGA,KAAK,CAACE,QAAQ,GAAG,SAAS;EAC3C,CAAC;EAED,MAAM6B,kBAAkB,GAAIC,IAAI,IAAK;IACnC,OAAO,GAAGA,IAAI,GAAG;EACnB,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAIC,MAAM,IAAK;IACpC,IAAI,CAAChD,eAAe,EAAE,OAAO,EAAE;IAC/B,IAAIA,eAAe,CAACiD,aAAa,KAAKD,MAAM,CAACE,QAAQ,EAAE,OAAO,mBAAmB;IACjF,IAAIlD,eAAe,CAACmD,gBAAgB,KAAKH,MAAM,CAACE,QAAQ,EAAE,OAAO,mBAAmB;IACpF,IAAIlD,eAAe,CAACoD,eAAe,KAAKJ,MAAM,CAACE,QAAQ,EAAE,OAAO,mBAAmB;IACnF,OAAO,EAAE;EACX,CAAC;EAED,oBACEnE,OAAA;IAAKsE,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBvE,OAAA;MAAKsE,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCvE,OAAA;QAAAuE,QAAA,EAAI;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjC3E,OAAA;QAAAuE,QAAA,EAAG;MAAsD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eAGN3E,OAAA;MAAKsE,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BvE,OAAA;QAAKsE,SAAS,EAAC,yBAAyB;QAAAC,QAAA,eACtCvE,OAAA;UACE4E,KAAK,EAAErE,OAAQ;UACfsE,QAAQ,EAAGC,CAAC,IAAKtE,UAAU,CAACsE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC5CI,WAAW,EAAC,wDAAwD;UACpEV,SAAS,EAAC,eAAe;UACzBW,IAAI,EAAE,CAAE;UACRC,QAAQ,EAAEnE;QAAU;UAAAyD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGN3E,OAAA;QAAKsE,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BvE,OAAA;UAAKsE,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/BvE,OAAA;YAAAuE,QAAA,GAAI,iBAAe,EAAC5D,cAAc,CAACgB,MAAM,EAAC,GAAC,EAACR,SAAS,EAAC,GAAC;UAAA;YAAAqD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5D3E,OAAA;YAAKsE,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACjCvE,OAAA;cAAAuE,QAAA,EAAO;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC1B3E,OAAA;cACE4E,KAAK,EAAEzD,SAAU;cACjB0D,QAAQ,EAAGC,CAAC,IAAK1D,YAAY,CAAC+D,MAAM,CAACL,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,CAAE;cACtDM,QAAQ,EAAEnE,SAAU;cAAAwD,QAAA,gBAEpBvE,OAAA;gBAAQ4E,KAAK,EAAE,CAAE;gBAAAL,QAAA,EAAC;cAAC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC5B3E,OAAA;gBAAQ4E,KAAK,EAAE,CAAE;gBAAAL,QAAA,EAAC;cAAC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC5B3E,OAAA;gBAAQ4E,KAAK,EAAE,CAAE;gBAAAL,QAAA,EAAC;cAAC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC5B3E,OAAA;gBAAQ4E,KAAK,EAAE,CAAE;gBAAAL,QAAA,EAAC;cAAC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN3E,OAAA;UAAKsE,SAAS,EAAC,aAAa;UAAAC,QAAA,EACzB9D,eAAe,CAAC2E,GAAG,CAACrD,KAAK,iBACxB/B,OAAA;YAEEsE,SAAS,EAAE,cAAc3D,cAAc,CAAC+B,QAAQ,CAACX,KAAK,CAACI,EAAE,CAAC,GAAG,UAAU,GAAG,EAAE,EAAG;YAC/EkD,OAAO,EAAEA,CAAA,KAAM9C,iBAAiB,CAACR,KAAK,CAACI,EAAE,CAAE;YAAAoC,QAAA,gBAE3CvE,OAAA;cAAKsE,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACzBvE,OAAA;gBAAMsE,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,EAAExC,KAAK,CAACE;cAAQ;gBAAAuC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACxD3E,OAAA;gBAAMsE,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAExC,KAAK,CAAC4B;cAAI;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C,CAAC,eACN3E,OAAA;cAAKsE,SAAS,EAAC,eAAe;cAAAC,QAAA,eAC5BvE,OAAA;gBAAAuE,QAAA,GAAO,WAAS,EAACxC,KAAK,CAACuD,cAAc;cAAA;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3C,CAAC;UAAA,GAVD5C,KAAK,CAACI,EAAE;YAAAqC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAWV,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEN3E,OAAA;QACEqF,OAAO,EAAExC,aAAc;QACvBqC,QAAQ,EAAEnE,SAAS,IAAI,CAACR,OAAO,CAACuC,IAAI,CAAC,CAAC,IAAInC,cAAc,CAACgB,MAAM,KAAK,CAAE;QACtE2C,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAEzBxD,SAAS,GAAG,iBAAiB,GAAG;MAAmB;QAAAyD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAGL1D,eAAe,iBACdjB,OAAA;MAAKsE,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BvE,OAAA;QAAAuE,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9B3E,OAAA;QAAKsE,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBvE,OAAA;UAAKsE,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBvE,OAAA;YAAMsE,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC/C3E,OAAA;YAAMsE,SAAS,EAAC,YAAY;YAAAC,QAAA,GAAEtD,eAAe,CAACsE,qBAAqB,EAAC,GAAC;UAAA;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzE,CAAC,eACN3E,OAAA;UAAKsE,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBvE,OAAA;YAAMsE,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC/C3E,OAAA;YAAMsE,SAAS,EAAC,YAAY;YAAAC,QAAA,GAAEtD,eAAe,CAACuE,oBAAoB,EAAC,GAAC,EAACvE,eAAe,CAACwE,YAAY;UAAA;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtG,CAAC,eACN3E,OAAA;UAAKsE,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBvE,OAAA;YAAMsE,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACjD3E,OAAA;YAAMsE,SAAS,EAAC,YAAY;YAAAC,QAAA,GAAEtD,eAAe,CAACyE,qBAAqB,EAAC,GAAC;UAAA;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzE,CAAC,EACL1D,eAAe,CAACiD,aAAa,iBAC5BlE,OAAA;UAAKsE,SAAS,EAAC,6BAA6B;UAAAC,QAAA,gBAC1CvE,OAAA;YAAMsE,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC5C3E,OAAA;YAAMsE,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEhB,mBAAmB,CAACtC,eAAe,CAACiD,aAAa;UAAC;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrF,CACN,EACA1D,eAAe,CAACmD,gBAAgB,iBAC/BpE,OAAA;UAAKsE,SAAS,EAAC,6BAA6B;UAAAC,QAAA,gBAC1CvE,OAAA;YAAMsE,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC5C3E,OAAA;YAAMsE,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEhB,mBAAmB,CAACtC,eAAe,CAACmD,gBAAgB;UAAC;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxF,CACN,EACA1D,eAAe,CAACoD,eAAe,iBAC9BrE,OAAA;UAAKsE,SAAS,EAAC,6BAA6B;UAAAC,QAAA,gBAC1CvE,OAAA;YAAMsE,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACjD3E,OAAA;YAAMsE,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEhB,mBAAmB,CAACtC,eAAe,CAACoD,eAAe;UAAC;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvF,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGA9D,OAAO,CAACc,MAAM,GAAG,CAAC,iBACjB3B,OAAA;MAAKsE,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BvE,OAAA;QAAAuE,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3B3E,OAAA;QAAKsE,SAAS,EAAC,cAAc;QAAAC,QAAA,EAC1B1D,OAAO,CAACuE,GAAG,CAAC,CAACnB,MAAM,EAAE0B,KAAK,kBACzB3F,OAAA;UAA2BsE,SAAS,EAAE,eAAeN,iBAAiB,CAACC,MAAM,CAAC,EAAG;UAAAM,QAAA,gBAC/EvE,OAAA;YAAKsE,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC5BvE,OAAA;cAAKsE,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACzBvE,OAAA;gBAAMsE,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAEV,gBAAgB,CAACI,MAAM,CAACE,QAAQ;cAAC;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACzE3E,OAAA;gBAAMsE,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAEhB,mBAAmB,CAACU,MAAM,CAACE,QAAQ;cAAC;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvE,CAAC,eACN3E,OAAA;cAAKsE,SAAS,EAAC,cAAc;cAAAC,QAAA,gBAC3BvE,OAAA;gBAAMsE,SAAS,EAAC,eAAe;gBAAAC,QAAA,GAAC,eAAG,EAACT,kBAAkB,CAACG,MAAM,CAAC2B,aAAa,CAAC;cAAA;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACpF3E,OAAA;gBAAMsE,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,GAAC,eAAG,EAACN,MAAM,CAAC4B,qBAAqB,EAAC,WAAS,EAAC5B,MAAM,CAAC6B,qBAAqB,EAAC,QAAM;cAAA;gBAAAtB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACvH3E,OAAA;gBAAMsE,SAAS,EAAC,eAAe;gBAAAC,QAAA,GAAC,SAAE,EAACwB,IAAI,CAACC,KAAK,CAAC/B,MAAM,CAACgC,aAAa,GAAG,GAAG,CAAC,EAAC,GAAC;cAAA;gBAAAzB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/E,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACN3E,OAAA;YAAKsE,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAC5BN,MAAM,CAAC5B,KAAK,gBACXrC,OAAA;cAAKsE,SAAS,EAAC,eAAe;cAAAC,QAAA,GAAC,gBACpB,EAACN,MAAM,CAAC5B,KAAK;YAAA;cAAAmC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnB,CAAC,gBAEN3E,OAAA;cAAKsE,SAAS,EAAC,eAAe;cAAAC,QAAA,EAC3BN,MAAM,CAAC3C;YAAQ;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACb;UACN;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACN3E,OAAA;YAAKsE,SAAS,EAAC,eAAe;YAAAC,QAAA,eAC5BvE,OAAA;cAAAuE,QAAA,GAAO,eAAa,EAAC,IAAI2B,IAAI,CAACjC,MAAM,CAACkC,SAAS,CAAC,CAACC,kBAAkB,CAAC,CAAC;YAAA;cAAA5B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1E,CAAC;QAAA,GAzBEV,MAAM,CAACE,QAAQ;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA0BpB,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGA5D,SAAS,iBACRf,OAAA;MAAKsE,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BvE,OAAA;QAAKsE,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BvE,OAAA;UAAKsE,SAAS,EAAC;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC/B3E,OAAA;UAAAuE,QAAA,GAAG,WAAS,EAAC5D,cAAc,CAACgB,MAAM,EAAC,YAAU;QAAA;UAAA6C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrE,EAAA,CApQID,SAAS;AAAAgG,EAAA,GAAThG,SAAS;AAsQf,eAAeA,SAAS;AAAC,IAAAgG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}