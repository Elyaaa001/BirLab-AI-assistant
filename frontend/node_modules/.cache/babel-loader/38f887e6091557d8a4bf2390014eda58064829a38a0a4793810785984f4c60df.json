{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import axios from'axios';import SplitView from'./SplitView';import'./App.css';// API configuration\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:8000';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Agent icons mapping\nconst AGENT_ICONS={gemini_pro:'🧠',gemini_flash:'⚡',gemini_vision:'👁️',gemini_coder:'💻',gemini_researcher:'📚',gpt4:'🤖',claude:'🎨'};// Agent colors\nconst AGENT_COLORS={gemini_pro:'#4285f4',gemini_flash:'#ea4335',gemini_vision:'#34a853',gemini_coder:'#fbbc04',gemini_researcher:'#9c27b0',gpt4:'#10a37f',claude:'#d4a574'};// Provider/model icons\nconst PROVIDER_ICONS={openai:'🤖',google:'🧠',anthropic:'🎨',cohere:'📝',huggingface:'🤗',mistral:'🏰',together:'🤝',perplexity:'🔎',fireworks:'🎆',replicate:'🔁',groq:'⚡',ai21:'🧬',grok:'🦾',ollama:'🦙'};function App(){var _agents$find,_taskResult$execution;const[agents,setAgents]=useState([]);const[selectedAgent,setSelectedAgent]=useState('gemini_pro');const[messages,setMessages]=useState([]);const[currentMessage,setCurrentMessage]=useState('');const[isLoading,setIsLoading]=useState(false);const[systemStatus,setSystemStatus]=useState(null);const[activeTab,setActiveTab]=useState('chat');const[imageFile,setImageFile]=useState(null);const[imagePreview,setImagePreview]=useState(null);const[taskDescription,setTaskDescription]=useState('');const[taskResult,setTaskResult]=useState(null);const messagesEndRef=useRef(null);// Load agents and system status on mount\nuseEffect(()=>{loadAgents();loadSystemStatus();},[]);// Auto-scroll to bottom of messages\nuseEffect(()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});},[messages]);const loadAgents=async()=>{try{const response=await api.get('/agents');setAgents(response.data);if(response.data.length>0&&!response.data.find(a=>a.id===selectedAgent)){setSelectedAgent(response.data[0].id);}}catch(error){console.error('Failed to load agents:',error);}};const loadSystemStatus=async()=>{try{const response=await api.get('/system/status');setSystemStatus(response.data);}catch(error){console.error('Failed to load system status:',error);}};const sendMessage=async e=>{e.preventDefault();if(!currentMessage.trim()||isLoading)return;const userMessage={id:Date.now(),text:currentMessage,sender:'user',timestamp:new Date().toLocaleTimeString()};setMessages(prev=>[...prev,userMessage]);setCurrentMessage('');setIsLoading(true);try{const response=await api.post('/chat',{message:currentMessage,agent_type:selectedAgent,temperature:0.7,max_tokens:2048});const agentMessage={id:Date.now()+1,text:response.data.response,sender:'agent',agent:response.data.agent,agent_type:response.data.agent_type,execution_time:response.data.execution_time,timestamp:new Date().toLocaleTimeString()};setMessages(prev=>[...prev,agentMessage]);}catch(error){var _error$response,_error$response$data;console.error('Chat error:',error);const errorMessage={id:Date.now()+1,text:`Error: ${((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.detail)||error.message}`,sender:'error',timestamp:new Date().toLocaleTimeString()};setMessages(prev=>[...prev,errorMessage]);}finally{setIsLoading(false);}};const executeTask=async e=>{e.preventDefault();if(!taskDescription.trim()||isLoading)return;setIsLoading(true);setTaskResult(null);try{const response=await api.post('/task',{description:taskDescription,task_type:'general',priority:'MEDIUM',context:{},preferred_agent:selectedAgent});setTaskResult({success:true,result:response.data.result,agent_used:response.data.agent_used,execution_time:response.data.execution_time,task_id:response.data.task_id});}catch(error){var _error$response2,_error$response2$data;console.error('Task execution error:',error);setTaskResult({success:false,error:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.detail)||error.message});}finally{setIsLoading(false);}};const handleImageUpload=e=>{const file=e.target.files[0];if(file){setImageFile(file);const reader=new FileReader();reader.onload=e=>setImagePreview(e.target.result);reader.readAsDataURL(file);}};const analyzeImage=async()=>{if(!imageFile||isLoading)return;setIsLoading(true);setTaskResult(null);try{const formData=new FormData();formData.append('image',imageFile);formData.append('text',taskDescription||'Analyze this image in detail');const response=await api.post('/multimodal',formData,{headers:{'Content-Type':'multipart/form-data'}});setTaskResult({success:true,result:response.data.analysis,agent_used:response.data.agent,filename:response.data.filename,image_size:response.data.image_size});}catch(error){var _error$response3,_error$response3$data;console.error('Image analysis error:',error);setTaskResult({success:false,error:((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.detail)||error.message});}finally{setIsLoading(false);}};const clearChat=()=>{setMessages([]);};const getAgentIcon=agentType=>AGENT_ICONS[agentType]||'🤖';const getAgentColor=agentType=>AGENT_COLORS[agentType]||'#6b7280';const getProviderIcon=provider=>PROVIDER_ICONS[provider]||'🤖';return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"header-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-left\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83C\\uDF1F BirLab AI\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Ultimate coordination of 14+ AI providers\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"header-right\",children:systemStatus&&/*#__PURE__*/_jsxs(\"div\",{className:\"system-status\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-label\",children:\"Agents:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"status-value\",children:systemStatus.active_agents})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-label\",children:\"Tasks:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"status-value\",children:systemStatus.completed_tasks})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-label\",children:\"Uptime:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"status-value\",children:[Math.round(systemStatus.uptime_seconds),\"s\"]})]})]})})]})}),/*#__PURE__*/_jsxs(\"nav\",{className:\"nav-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:`nav-tab ${activeTab==='chat'?'active':''}`,onClick:()=>setActiveTab('chat'),children:\"\\uD83D\\uDCAC Chat\"}),/*#__PURE__*/_jsx(\"button\",{className:`nav-tab ${activeTab==='tasks'?'active':''}`,onClick:()=>setActiveTab('tasks'),children:\"\\uD83C\\uDFAF Tasks\"}),/*#__PURE__*/_jsx(\"button\",{className:`nav-tab ${activeTab==='vision'?'active':''}`,onClick:()=>setActiveTab('vision'),children:\"\\uD83D\\uDC41\\uFE0F Vision\"}),/*#__PURE__*/_jsx(\"button\",{className:`nav-tab ${activeTab==='split-view'?'active':''}`,onClick:()=>setActiveTab('split-view'),children:\"\\uD83D\\uDD00 Split View\"}),/*#__PURE__*/_jsx(\"button\",{className:`nav-tab ${activeTab==='agents'?'active':''}`,onClick:()=>setActiveTab('agents'),children:\"\\uD83E\\uDD16 Agents\"})]}),/*#__PURE__*/_jsxs(\"main\",{className:\"main-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"agent-selector\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"agent-select\",children:\"Select AI Agent:\"}),/*#__PURE__*/_jsx(\"select\",{id:\"agent-select\",value:selectedAgent,onChange:e=>setSelectedAgent(e.target.value),className:\"agent-select\",children:agents.map(agent=>/*#__PURE__*/_jsxs(\"option\",{value:agent.id,children:[getAgentIcon(agent.id),\" \",agent.name]},agent.id))})]}),activeTab==='chat'&&/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-messages\",children:[messages.length===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"welcome-message\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Welcome to BirLab AI Chat! \\uD83C\\uDF1F\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Select an AI agent and start chatting. Each agent has unique capabilities:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"\\uD83E\\uDDE0 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Gemini Pro\"}),\": 2M token context, advanced reasoning\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u26A1 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Gemini Flash\"}),\": Lightning-fast responses\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\uD83D\\uDC41\\uFE0F \",/*#__PURE__*/_jsx(\"strong\",{children:\"Gemini Vision\"}),\": Image understanding\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\uD83D\\uDCBB \",/*#__PURE__*/_jsx(\"strong\",{children:\"Gemini Coder\"}),\": Programming specialist\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\uD83D\\uDCDA \",/*#__PURE__*/_jsx(\"strong\",{children:\"Gemini Researcher\"}),\": Research and analysis\"]})]})]}),messages.map(message=>/*#__PURE__*/_jsxs(\"div\",{className:`message ${message.sender}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"message-sender\",children:message.sender==='user'?'👤 You':message.sender==='error'?'❌ Error':`${getAgentIcon(message.agent_type)} ${message.agent}`}),/*#__PURE__*/_jsx(\"span\",{className:\"message-time\",children:message.timestamp}),message.execution_time&&/*#__PURE__*/_jsxs(\"span\",{className:\"execution-time\",children:[\"\\u26A1 \",message.execution_time.toFixed(2),\"s\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"message-content\",children:message.text})]},message.id)),isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"message agent loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-header\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"message-sender\",children:[getAgentIcon(selectedAgent),\" \",((_agents$find=agents.find(a=>a.id===selectedAgent))===null||_agents$find===void 0?void 0:_agents$find.name)||'AI Agent']})}),/*#__PURE__*/_jsx(\"div\",{className:\"message-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"typing-indicator\",children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{})]})})]}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsx(\"form\",{onSubmit:sendMessage,className:\"chat-input-form\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:currentMessage,onChange:e=>setCurrentMessage(e.target.value),placeholder:\"Type your message...\",className:\"chat-input\",disabled:isLoading}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"send-button\",disabled:isLoading||!currentMessage.trim(),children:isLoading?'⏳':'🚀'}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:clearChat,className:\"clear-button\",title:\"Clear chat\",children:\"\\uD83D\\uDDD1\\uFE0F\"})]})})]}),activeTab==='tasks'&&/*#__PURE__*/_jsxs(\"div\",{className:\"tasks-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83C\\uDFAF Complex Task Execution\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Execute complex tasks using the AI coordinator system\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:executeTask,className:\"task-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"task-description\",children:\"Task Description:\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"task-description\",value:taskDescription,onChange:e=>setTaskDescription(e.target.value),placeholder:\"Describe the task you want to execute...\",className:\"task-textarea\",rows:4,disabled:isLoading})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"execute-button\",disabled:isLoading||!taskDescription.trim(),children:isLoading?'⏳ Executing...':'🚀 Execute Task'})]}),taskResult&&/*#__PURE__*/_jsxs(\"div\",{className:`task-result ${taskResult.success?'success':'error'}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"result-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:taskResult.success?'✅ Task Completed':'❌ Task Failed'}),taskResult.success&&/*#__PURE__*/_jsxs(\"div\",{className:\"result-meta\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Agent: \",taskResult.agent_used]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Time: \",(_taskResult$execution=taskResult.execution_time)===null||_taskResult$execution===void 0?void 0:_taskResult$execution.toFixed(2),\"s\"]}),taskResult.task_id&&/*#__PURE__*/_jsxs(\"span\",{children:[\"ID: \",taskResult.task_id.slice(0,8)]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"result-content\",children:taskResult.success?taskResult.result:taskResult.error})]})]}),activeTab==='vision'&&/*#__PURE__*/_jsxs(\"div\",{className:\"vision-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDC41\\uFE0F Multimodal Vision Analysis\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Upload an image and ask questions about it using Gemini Vision\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"vision-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"image-upload\",children:\"Upload Image:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"image-upload\",type:\"file\",accept:\"image/*\",onChange:handleImageUpload,className:\"file-input\"})]}),imagePreview&&/*#__PURE__*/_jsx(\"div\",{className:\"image-preview\",children:/*#__PURE__*/_jsx(\"img\",{src:imagePreview,alt:\"Preview\",className:\"preview-image\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"image-question\",children:\"Question about the image:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"image-question\",type:\"text\",value:taskDescription,onChange:e=>setTaskDescription(e.target.value),placeholder:\"What do you want to know about this image?\",className:\"image-question-input\",disabled:isLoading})]}),/*#__PURE__*/_jsx(\"button\",{onClick:analyzeImage,className:\"analyze-button\",disabled:isLoading||!imageFile,children:isLoading?'⏳ Analyzing...':'🔍 Analyze Image'})]}),taskResult&&/*#__PURE__*/_jsxs(\"div\",{className:`task-result ${taskResult.success?'success':'error'}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"result-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:taskResult.success?'✅ Analysis Complete':'❌ Analysis Failed'}),taskResult.success&&/*#__PURE__*/_jsxs(\"div\",{className:\"result-meta\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Agent: \",taskResult.agent_used]}),taskResult.filename&&/*#__PURE__*/_jsxs(\"span\",{children:[\"File: \",taskResult.filename]}),taskResult.image_size&&/*#__PURE__*/_jsxs(\"span\",{children:[\"Size: \",(taskResult.image_size/1024).toFixed(1),\"KB\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"result-content\",children:taskResult.success?taskResult.result:taskResult.error})]})]}),activeTab==='split-view'&&/*#__PURE__*/_jsx(\"div\",{className:\"content-section\",children:/*#__PURE__*/_jsx(SplitView,{})}),activeTab==='agents'&&/*#__PURE__*/_jsxs(\"div\",{className:\"agents-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83E\\uDD16 Available AI Agents\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Overview of all available AI agents and their capabilities\"}),/*#__PURE__*/_jsx(\"div\",{className:\"agents-grid\",children:agents.filter(agent=>agent&&agent.id&&agent.name&&!agent.error).map(agent=>/*#__PURE__*/_jsxs(\"div\",{className:`agent-card ${selectedAgent===agent.id?'selected':''}`,onClick:()=>setSelectedAgent(agent.id),style:{borderColor:getAgentColor(agent.id)},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"agent-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"agent-icon\",style:{color:getAgentColor(agent.id)},children:getProviderIcon(agent.model_info&&agent.model_info.provider||'unknown')}),/*#__PURE__*/_jsxs(\"div\",{className:\"agent-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:agent.name}),/*#__PURE__*/_jsx(\"p\",{className:\"agent-type\",children:agent.type})]}),/*#__PURE__*/_jsx(\"div\",{className:\"agent-status\",children:/*#__PURE__*/_jsx(\"span\",{className:`status-badge ${agent.status}`,children:agent.status})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"agent-capabilities\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Capabilities:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"capabilities-list\",children:agent.capabilities.map(cap=>/*#__PURE__*/_jsx(\"span\",{className:\"capability-tag\",children:cap},cap))})]}),agent.model_info&&Object.keys(agent.model_info).length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"agent-model-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Model Info:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"model-info-grid\",children:[agent.model_info.provider&&/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Provider:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[getProviderIcon(agent.model_info.provider),\" \",agent.model_info.provider]})]}),agent.model_info.context_length&&/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Context:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[agent.model_info.context_length.toLocaleString(),\" tokens\"]})]}),agent.model_info.version&&/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Version:\"}),/*#__PURE__*/_jsx(\"span\",{children:agent.model_info.version})]})]})]})]},agent.id))}),agents.length===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"no-agents\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"No agents available\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Make sure your backend is running and API keys are configured.\"})]})]})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","SplitView","jsx","_jsx","jsxs","_jsxs","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","AGENT_ICONS","gemini_pro","gemini_flash","gemini_vision","gemini_coder","gemini_researcher","gpt4","claude","AGENT_COLORS","PROVIDER_ICONS","openai","google","anthropic","cohere","huggingface","mistral","together","perplexity","fireworks","replicate","groq","ai21","grok","ollama","App","_agents$find","_taskResult$execution","agents","setAgents","selectedAgent","setSelectedAgent","messages","setMessages","currentMessage","setCurrentMessage","isLoading","setIsLoading","systemStatus","setSystemStatus","activeTab","setActiveTab","imageFile","setImageFile","imagePreview","setImagePreview","taskDescription","setTaskDescription","taskResult","setTaskResult","messagesEndRef","loadAgents","loadSystemStatus","_messagesEndRef$curre","current","scrollIntoView","behavior","response","get","data","length","find","a","id","error","console","sendMessage","e","preventDefault","trim","userMessage","Date","now","text","sender","timestamp","toLocaleTimeString","prev","post","message","agent_type","temperature","max_tokens","agentMessage","agent","execution_time","_error$response","_error$response$data","errorMessage","detail","executeTask","description","task_type","priority","context","preferred_agent","success","result","agent_used","task_id","_error$response2","_error$response2$data","handleImageUpload","file","target","files","reader","FileReader","onload","readAsDataURL","analyzeImage","formData","FormData","append","analysis","filename","image_size","_error$response3","_error$response3$data","clearChat","getAgentIcon","agentType","getAgentColor","getProviderIcon","provider","className","children","active_agents","completed_tasks","Math","round","uptime_seconds","onClick","htmlFor","value","onChange","map","name","toFixed","ref","onSubmit","type","placeholder","disabled","title","rows","slice","accept","src","alt","filter","style","borderColor","color","model_info","status","capabilities","cap","Object","keys","context_length","toLocaleString","version"],"sources":["/Users/mac/Documents/BirLab-AI-assistant/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport SplitView from './SplitView';\nimport './App.css';\n\n// API configuration\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Agent icons mapping\nconst AGENT_ICONS = {\n  gemini_pro: '🧠',\n  gemini_flash: '⚡',\n  gemini_vision: '👁️',\n  gemini_coder: '💻',\n  gemini_researcher: '📚',\n  gpt4: '🤖',\n  claude: '🎨'\n};\n\n// Agent colors\nconst AGENT_COLORS = {\n  gemini_pro: '#4285f4',\n  gemini_flash: '#ea4335',\n  gemini_vision: '#34a853',\n  gemini_coder: '#fbbc04',\n  gemini_researcher: '#9c27b0',\n  gpt4: '#10a37f',\n  claude: '#d4a574'\n};\n\n// Provider/model icons\nconst PROVIDER_ICONS = {\n  openai: '🤖',\n  google: '🧠',\n  anthropic: '🎨',\n  cohere: '📝',\n  huggingface: '🤗',\n  mistral: '🏰',\n  together: '🤝',\n  perplexity: '🔎',\n  fireworks: '🎆',\n  replicate: '🔁',\n  groq: '⚡',\n  ai21: '🧬',\n  grok: '🦾',\n  ollama: '🦙',\n};\n\nfunction App() {\n  const [agents, setAgents] = useState([]);\n  const [selectedAgent, setSelectedAgent] = useState('gemini_pro');\n  const [messages, setMessages] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [systemStatus, setSystemStatus] = useState(null);\n  const [activeTab, setActiveTab] = useState('chat');\n  const [imageFile, setImageFile] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [taskDescription, setTaskDescription] = useState('');\n  const [taskResult, setTaskResult] = useState(null);\n  const messagesEndRef = useRef(null);\n\n  // Load agents and system status on mount\n  useEffect(() => {\n    loadAgents();\n    loadSystemStatus();\n  }, []);\n\n  // Auto-scroll to bottom of messages\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const loadAgents = async () => {\n    try {\n      const response = await api.get('/agents');\n      setAgents(response.data);\n      if (response.data.length > 0 && !response.data.find(a => a.id === selectedAgent)) {\n        setSelectedAgent(response.data[0].id);\n      }\n    } catch (error) {\n      console.error('Failed to load agents:', error);\n    }\n  };\n\n  const loadSystemStatus = async () => {\n    try {\n      const response = await api.get('/system/status');\n      setSystemStatus(response.data);\n    } catch (error) {\n      console.error('Failed to load system status:', error);\n    }\n  };\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    if (!currentMessage.trim() || isLoading) return;\n\n    const userMessage = {\n      id: Date.now(),\n      text: currentMessage,\n      sender: 'user',\n      timestamp: new Date().toLocaleTimeString()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setCurrentMessage('');\n    setIsLoading(true);\n\n    try {\n      const response = await api.post('/chat', {\n        message: currentMessage,\n        agent_type: selectedAgent,\n        temperature: 0.7,\n        max_tokens: 2048\n      });\n\n      const agentMessage = {\n        id: Date.now() + 1,\n        text: response.data.response,\n        sender: 'agent',\n        agent: response.data.agent,\n        agent_type: response.data.agent_type,\n        execution_time: response.data.execution_time,\n        timestamp: new Date().toLocaleTimeString()\n      };\n\n      setMessages(prev => [...prev, agentMessage]);\n    } catch (error) {\n      console.error('Chat error:', error);\n      const errorMessage = {\n        id: Date.now() + 1,\n        text: `Error: ${error.response?.data?.detail || error.message}`,\n        sender: 'error',\n        timestamp: new Date().toLocaleTimeString()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const executeTask = async (e) => {\n    e.preventDefault();\n    if (!taskDescription.trim() || isLoading) return;\n\n    setIsLoading(true);\n    setTaskResult(null);\n\n    try {\n      const response = await api.post('/task', {\n        description: taskDescription,\n        task_type: 'general',\n        priority: 'MEDIUM',\n        context: {},\n        preferred_agent: selectedAgent\n      });\n\n      setTaskResult({\n        success: true,\n        result: response.data.result,\n        agent_used: response.data.agent_used,\n        execution_time: response.data.execution_time,\n        task_id: response.data.task_id\n      });\n    } catch (error) {\n      console.error('Task execution error:', error);\n      setTaskResult({\n        success: false,\n        error: error.response?.data?.detail || error.message\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleImageUpload = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setImageFile(file);\n      const reader = new FileReader();\n      reader.onload = (e) => setImagePreview(e.target.result);\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const analyzeImage = async () => {\n    if (!imageFile || isLoading) return;\n\n    setIsLoading(true);\n    setTaskResult(null);\n\n    try {\n      const formData = new FormData();\n      formData.append('image', imageFile);\n      formData.append('text', taskDescription || 'Analyze this image in detail');\n\n      const response = await api.post('/multimodal', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      setTaskResult({\n        success: true,\n        result: response.data.analysis,\n        agent_used: response.data.agent,\n        filename: response.data.filename,\n        image_size: response.data.image_size\n      });\n    } catch (error) {\n      console.error('Image analysis error:', error);\n      setTaskResult({\n        success: false,\n        error: error.response?.data?.detail || error.message\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const clearChat = () => {\n    setMessages([]);\n  };\n\n  const getAgentIcon = (agentType) => AGENT_ICONS[agentType] || '🤖';\n  const getAgentColor = (agentType) => AGENT_COLORS[agentType] || '#6b7280';\n  const getProviderIcon = (provider) => PROVIDER_ICONS[provider] || '🤖';\n\n  return (\n    <div className=\"app\">\n      {/* Header */}\n      <header className=\"header\">\n        <div className=\"header-content\">\n          <div className=\"header-left\">\n            <h1>🌟 BirLab AI</h1>\n            <p>Ultimate coordination of 14+ AI providers</p>\n          </div>\n          <div className=\"header-right\">\n            {systemStatus && (\n              <div className=\"system-status\">\n                <div className=\"status-item\">\n                  <span className=\"status-label\">Agents:</span>\n                  <span className=\"status-value\">{systemStatus.active_agents}</span>\n                </div>\n                <div className=\"status-item\">\n                  <span className=\"status-label\">Tasks:</span>\n                  <span className=\"status-value\">{systemStatus.completed_tasks}</span>\n                </div>\n                <div className=\"status-item\">\n                  <span className=\"status-label\">Uptime:</span>\n                  <span className=\"status-value\">{Math.round(systemStatus.uptime_seconds)}s</span>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </header>\n\n      {/* Navigation */}\n      <nav className=\"nav-tabs\">\n        <button \n          className={`nav-tab ${activeTab === 'chat' ? 'active' : ''}`}\n          onClick={() => setActiveTab('chat')}\n        >\n          💬 Chat\n        </button>\n        <button \n          className={`nav-tab ${activeTab === 'tasks' ? 'active' : ''}`}\n          onClick={() => setActiveTab('tasks')}\n        >\n          🎯 Tasks\n        </button>\n                    <button \n              className={`nav-tab ${activeTab === 'vision' ? 'active' : ''}`}\n              onClick={() => setActiveTab('vision')}\n            >\n              👁️ Vision\n            </button>\n            <button \n              className={`nav-tab ${activeTab === 'split-view' ? 'active' : ''}`}\n              onClick={() => setActiveTab('split-view')}\n            >\n              🔀 Split View\n            </button>\n            <button \n              className={`nav-tab ${activeTab === 'agents' ? 'active' : ''}`}\n              onClick={() => setActiveTab('agents')}\n            >\n              🤖 Agents\n            </button>\n      </nav>\n\n      <main className=\"main-content\">\n        {/* Agent Selector */}\n        <div className=\"agent-selector\">\n          <label htmlFor=\"agent-select\">Select AI Agent:</label>\n          <select \n            id=\"agent-select\"\n            value={selectedAgent} \n            onChange={(e) => setSelectedAgent(e.target.value)}\n            className=\"agent-select\"\n          >\n            {agents.map(agent => (\n              <option key={agent.id} value={agent.id}>\n                {getAgentIcon(agent.id)} {agent.name}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* Chat Tab */}\n        {activeTab === 'chat' && (\n          <div className=\"chat-container\">\n            <div className=\"chat-messages\">\n              {messages.length === 0 && (\n                <div className=\"welcome-message\">\n                  <h3>Welcome to BirLab AI Chat! 🌟</h3>\n                  <p>Select an AI agent and start chatting. Each agent has unique capabilities:</p>\n                  <ul>\n                    <li>🧠 <strong>Gemini Pro</strong>: 2M token context, advanced reasoning</li>\n                    <li>⚡ <strong>Gemini Flash</strong>: Lightning-fast responses</li>\n                    <li>👁️ <strong>Gemini Vision</strong>: Image understanding</li>\n                    <li>💻 <strong>Gemini Coder</strong>: Programming specialist</li>\n                    <li>📚 <strong>Gemini Researcher</strong>: Research and analysis</li>\n                  </ul>\n                </div>\n              )}\n\n              {messages.map(message => (\n                <div key={message.id} className={`message ${message.sender}`}>\n                  <div className=\"message-header\">\n                    <span className=\"message-sender\">\n                      {message.sender === 'user' ? '👤 You' : \n                       message.sender === 'error' ? '❌ Error' :\n                       `${getAgentIcon(message.agent_type)} ${message.agent}`}\n                    </span>\n                    <span className=\"message-time\">{message.timestamp}</span>\n                    {message.execution_time && (\n                      <span className=\"execution-time\">\n                        ⚡ {message.execution_time.toFixed(2)}s\n                      </span>\n                    )}\n                  </div>\n                  <div className=\"message-content\">\n                    {message.text}\n                  </div>\n                </div>\n              ))}\n\n              {isLoading && (\n                <div className=\"message agent loading\">\n                  <div className=\"message-header\">\n                    <span className=\"message-sender\">\n                      {getAgentIcon(selectedAgent)} {agents.find(a => a.id === selectedAgent)?.name || 'AI Agent'}\n                    </span>\n                  </div>\n                  <div className=\"message-content\">\n                    <div className=\"typing-indicator\">\n                      <span></span>\n                      <span></span>\n                      <span></span>\n                    </div>\n                  </div>\n                </div>\n              )}\n              <div ref={messagesEndRef} />\n            </div>\n\n            <form onSubmit={sendMessage} className=\"chat-input-form\">\n              <div className=\"chat-input-container\">\n                <input\n                  type=\"text\"\n                  value={currentMessage}\n                  onChange={(e) => setCurrentMessage(e.target.value)}\n                  placeholder=\"Type your message...\"\n                  className=\"chat-input\"\n                  disabled={isLoading}\n                />\n                <button \n                  type=\"submit\" \n                  className=\"send-button\"\n                  disabled={isLoading || !currentMessage.trim()}\n                >\n                  {isLoading ? '⏳' : '🚀'}\n                </button>\n                <button \n                  type=\"button\" \n                  onClick={clearChat}\n                  className=\"clear-button\"\n                  title=\"Clear chat\"\n                >\n                  🗑️\n                </button>\n              </div>\n            </form>\n          </div>\n        )}\n\n        {/* Tasks Tab */}\n        {activeTab === 'tasks' && (\n          <div className=\"tasks-container\">\n            <h2>🎯 Complex Task Execution</h2>\n            <p>Execute complex tasks using the AI coordinator system</p>\n\n            <form onSubmit={executeTask} className=\"task-form\">\n              <div className=\"form-group\">\n                <label htmlFor=\"task-description\">Task Description:</label>\n                <textarea\n                  id=\"task-description\"\n                  value={taskDescription}\n                  onChange={(e) => setTaskDescription(e.target.value)}\n                  placeholder=\"Describe the task you want to execute...\"\n                  className=\"task-textarea\"\n                  rows={4}\n                  disabled={isLoading}\n                />\n              </div>\n\n              <button \n                type=\"submit\" \n                className=\"execute-button\"\n                disabled={isLoading || !taskDescription.trim()}\n              >\n                {isLoading ? '⏳ Executing...' : '🚀 Execute Task'}\n              </button>\n            </form>\n\n            {taskResult && (\n              <div className={`task-result ${taskResult.success ? 'success' : 'error'}`}>\n                <div className=\"result-header\">\n                  <h3>\n                    {taskResult.success ? '✅ Task Completed' : '❌ Task Failed'}\n                  </h3>\n                  {taskResult.success && (\n                    <div className=\"result-meta\">\n                      <span>Agent: {taskResult.agent_used}</span>\n                      <span>Time: {taskResult.execution_time?.toFixed(2)}s</span>\n                      {taskResult.task_id && <span>ID: {taskResult.task_id.slice(0, 8)}</span>}\n                    </div>\n                  )}\n                </div>\n                <div className=\"result-content\">\n                  {taskResult.success ? taskResult.result : taskResult.error}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Vision Tab */}\n        {activeTab === 'vision' && (\n          <div className=\"vision-container\">\n            <h2>👁️ Multimodal Vision Analysis</h2>\n            <p>Upload an image and ask questions about it using Gemini Vision</p>\n\n            <div className=\"vision-form\">\n              <div className=\"form-group\">\n                <label htmlFor=\"image-upload\">Upload Image:</label>\n                <input\n                  id=\"image-upload\"\n                  type=\"file\"\n                  accept=\"image/*\"\n                  onChange={handleImageUpload}\n                  className=\"file-input\"\n                />\n              </div>\n\n              {imagePreview && (\n                <div className=\"image-preview\">\n                  <img src={imagePreview} alt=\"Preview\" className=\"preview-image\" />\n                </div>\n              )}\n\n              <div className=\"form-group\">\n                <label htmlFor=\"image-question\">Question about the image:</label>\n                <input\n                  id=\"image-question\"\n                  type=\"text\"\n                  value={taskDescription}\n                  onChange={(e) => setTaskDescription(e.target.value)}\n                  placeholder=\"What do you want to know about this image?\"\n                  className=\"image-question-input\"\n                  disabled={isLoading}\n                />\n              </div>\n\n              <button \n                onClick={analyzeImage}\n                className=\"analyze-button\"\n                disabled={isLoading || !imageFile}\n              >\n                {isLoading ? '⏳ Analyzing...' : '🔍 Analyze Image'}\n              </button>\n            </div>\n\n            {taskResult && (\n              <div className={`task-result ${taskResult.success ? 'success' : 'error'}`}>\n                <div className=\"result-header\">\n                  <h3>\n                    {taskResult.success ? '✅ Analysis Complete' : '❌ Analysis Failed'}\n                  </h3>\n                  {taskResult.success && (\n                    <div className=\"result-meta\">\n                      <span>Agent: {taskResult.agent_used}</span>\n                      {taskResult.filename && <span>File: {taskResult.filename}</span>}\n                      {taskResult.image_size && <span>Size: {(taskResult.image_size / 1024).toFixed(1)}KB</span>}\n                    </div>\n                  )}\n                </div>\n                <div className=\"result-content\">\n                  {taskResult.success ? taskResult.result : taskResult.error}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Split View Tab */}\n        {activeTab === 'split-view' && (\n          <div className=\"content-section\">\n            <SplitView />\n          </div>\n        )}\n\n        {/* Agents Tab */}\n        {activeTab === 'agents' && (\n          <div className=\"agents-container\">\n            <h2>🤖 Available AI Agents</h2>\n            <p>Overview of all available AI agents and their capabilities</p>\n\n            <div className=\"agents-grid\">\n              {agents.filter(agent => agent && agent.id && agent.name && (!agent.error)).map(agent => (\n                <div \n                  key={agent.id} \n                  className={`agent-card ${selectedAgent === agent.id ? 'selected' : ''}`}\n                  onClick={() => setSelectedAgent(agent.id)}\n                  style={{ borderColor: getAgentColor(agent.id) }}\n                >\n                  <div className=\"agent-header\">\n                    <div className=\"agent-icon\" style={{ color: getAgentColor(agent.id) }}>\n                      {getProviderIcon((agent.model_info && agent.model_info.provider) || 'unknown')}\n                    </div>\n                    <div className=\"agent-info\">\n                      <h3>{agent.name}</h3>\n                      <p className=\"agent-type\">{agent.type}</p>\n                    </div>\n                    <div className=\"agent-status\">\n                      <span className={`status-badge ${agent.status}`}>\n                        {agent.status}\n                      </span>\n                    </div>\n                  </div>\n\n                  <div className=\"agent-capabilities\">\n                    <h4>Capabilities:</h4>\n                    <div className=\"capabilities-list\">\n                      {agent.capabilities.map(cap => (\n                        <span key={cap} className=\"capability-tag\">\n                          {cap}\n                        </span>\n                      ))}\n                    </div>\n                  </div>\n\n                  {agent.model_info && Object.keys(agent.model_info).length > 0 && (\n                    <div className=\"agent-model-info\">\n                      <h4>Model Info:</h4>\n                      <div className=\"model-info-grid\">\n                        {agent.model_info.provider && (\n                          <div className=\"info-item\">\n                            <span>Provider:</span>\n                            <span>{getProviderIcon(agent.model_info.provider)} {agent.model_info.provider}</span>\n                          </div>\n                        )}\n                        {agent.model_info.context_length && (\n                          <div className=\"info-item\">\n                            <span>Context:</span>\n                            <span>{agent.model_info.context_length.toLocaleString()} tokens</span>\n                          </div>\n                        )}\n                        {agent.model_info.version && (\n                          <div className=\"info-item\">\n                            <span>Version:</span>\n                            <span>{agent.model_info.version}</span>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n\n            {agents.length === 0 && (\n              <div className=\"no-agents\">\n                <h3>No agents available</h3>\n                <p>Make sure your backend is running and API keys are configured.</p>\n              </div>\n            )}\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}